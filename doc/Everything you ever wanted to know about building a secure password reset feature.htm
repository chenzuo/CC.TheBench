<!DOCTYPE html>
<!-- saved from url=(0071)http://www.troyhunt.com/2012/05/everything-you-ever-wanted-to-know.html -->
<html class="v2 js flexbox flexboxlegacy canvas canvastext webgl no-touch geolocation postmessage websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths" dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://www.google.com/2005/gml/b" xmlns:data="http://www.google.com/2005/gml/data" xmlns:expr="http://www.google.com/2005/gml/expr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script type="text/javascript" src="./Everything you ever wanted to know about building a secure password reset feature_files/shares.json"></script><script src="./Everything you ever wanted to know about building a secure password reset feature_files/quant.js" async="" type="text/javascript"></script><script type="text/javascript" src="./Everything you ever wanted to know about building a secure password reset feature_files/auth016.js"></script><script id="LR1" type="text/javascript" async="" src="./Everything you ever wanted to know about building a secure password reset feature_files/client.js"></script><script type="text/javascript" src="./Everything you ever wanted to know about building a secure password reset feature_files/counter017.js"></script><link rel="stylesheet" type="text/css" href="./Everything you ever wanted to know about building a secure password reset feature_files/counter013.css" media="all"><script src="./Everything you ever wanted to know about building a secure password reset feature_files/cb=gapi.loaded_1" async=""></script><script type="text/javascript" src="./Everything you ever wanted to know about building a secure password reset feature_files/widgets.js"></script><link rel="stylesheet" type="text/css" href="./Everything you ever wanted to know about building a secure password reset feature_files/widget118.css" media="all">
<link type="text/css" rel="stylesheet" href="./Everything you ever wanted to know about building a secure password reset feature_files/2356033831-widget_css_2_bundle.css">
<link type="text/css" rel="stylesheet" href="./Everything you ever wanted to know about building a secure password reset feature_files/authorization.css">
<style id="page-skin-1" type="text/css"><!--

--></style>
<title>
Troy Hunt: Everything you ever wanted to know about building a secure password reset feature
</title>

<script src="./Everything you ever wanted to know about building a secure password reset feature_files/cb=gapi.loaded_0" async=""></script><script id="twitter-wjs" src="./Everything you ever wanted to know about building a secure password reset feature_files/widgets.js"></script><script type="text/javascript" async="" src="./Everything you ever wanted to know about building a secure password reset feature_files/dc.js"></script><script type="text/javascript">(function() { var b=window,f="chrome",g="jstiming",k="tick";(function(){function d(a){this.t={};this.tick=function(a,d,c){var e=void 0!=c?c:(new Date).getTime();this.t[a]=[e,d];if(void 0==c)try{b.console.timeStamp("CSI/"+a)}catch(h){}};this[k]("start",null,a)}var a;b.performance&&(a=b.performance.timing);var n=a?new d(a.responseStart):new d;b.jstiming={Timer:d,load:n};if(a){var c=a.navigationStart,h=a.responseStart;0<c&&h>=c&&(b[g].srt=h-c)}if(a){var e=b[g].load;0<c&&h>=c&&(e[k]("_wtsrt",void 0,c),e[k]("wtsrt_","_wtsrt",h),e[k]("tbsd_","wtsrt_"))}try{a=null,
b[f]&&b[f].csi&&(a=Math.floor(b[f].csi().pageT),e&&0<c&&(e[k]("_tbnd",void 0,b[f].csi().startE),e[k]("tbnd_","_tbnd",c))),null==a&&b.gtbExternal&&(a=b.gtbExternal.pageT()),null==a&&b.external&&(a=b.external.pageT,e&&0<c&&(e[k]("_tbnd",void 0,b.external.startE),e[k]("tbnd_","_tbnd",c))),a&&(b[g].pt=a)}catch(p){}})();b.tickAboveFold=function(d){var a=0;if(d.offsetParent){do a+=d.offsetTop;while(d=d.offsetParent)}d=a;750>=d&&b[g].load[k]("aft")};var l=!1;function m(){l||(l=!0,b[g].load[k]("firstScrollTime"))}b.addEventListener?b.addEventListener("scroll",m,!1):b.attachEvent("onscroll",m);
 })();</script>
<meta content="blogger" name="generator">
<link href="http://www.troyhunt.com/favicon.ico" rel="icon" type="image/x-icon">
<link href="./Everything you ever wanted to know about building a secure password reset feature_files/Everything you ever wanted to know about building a secure password reset feature.htm" rel="canonical">
<link rel="alternate" type="application/atom+xml" title="Troy Hunt - Atom" href="http://www.troyhunt.com/feeds/posts/default">
<link rel="alternate" type="application/rss+xml" title="Troy Hunt - RSS" href="http://www.troyhunt.com/feeds/posts/default?alt=rss">
<link rel="service.post" type="application/atom+xml" title="Troy Hunt - Atom" href="http://www.blogger.com/feeds/3977663544337573923/posts/default">

<link rel="alternate" type="application/atom+xml" title="Troy Hunt - Atom" href="http://www.troyhunt.com/feeds/2090131566500196324/comments/default">
<!--[if IE]><script type="text/javascript" src="https://www.blogger.com/static/v1/jsbin/850967532-ieretrofit.js"></script>
<![endif]-->
<link rel="image_src" href="https://lh6.googleusercontent.com/-9Va6Qa-dV-0/UIZ_gj11DrI/AAAAAAAAEGg/WGQ9aiuxjfA/s72-c/SNAGHTML3181e493_2.png?imgmax=800">
<link href="https://plus.google.com/111846329802076778489" rel="publisher">
<!--[if IE]> <script> (function() { var html5 = ("abbr,article,aside,audio,canvas,datalist,details," + "figure,footer,header,hgroup,mark,menu,meter,nav,output," + "progress,section,time,video").split(','); for (var i = 0; i < html5.length; i++) { document.createElement(html5[i]); } try { document.execCommand('BackgroundImageCache', false, true); } catch(e) {} })(); </script> <![endif]-->
<meta content="Troy Hunt, blog, .NET, Azure, Backup, Bing, Blogger, Career Development, Code Quality, Conference, Database, Design Utopia, DotNetNuke, Enterprise Software Platform, Internet Explorer, iPhone, K2, LinkedIn, Media, NDepend, Online Identity, OWASP, People Management, Personal Development, Product Review, ReSharper, Security, SharePoint, Silverlight, Software Quality, SQL Injection, SQL Server, Subversion, Travel, Twitter, Visual Studio, Windows Mobile, XSS," name="keywords">
<meta content="Troy Hunt" name="author">
<meta content="Troy Hunt" name="copyright">
<meta content="IE=8" http-equiv="x-ua-compatible">
<link href="http://troyhuntblog.apphb.com/Style?v=2013122601" rel="stylesheet">
<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0" name="viewport">
<link href="https://www.facebook.com/troyahunt" rel="me">
<link href="https://twitter.com/troyhunt" rel="me">
<link href="http://www.linkedin.com/in/troyhunt" rel="me">
<link href="https://plus.google.com/+TroyHunt" rel="me">
<link href="http://www.youtube.com/user/troyhuntdotcom" rel="me">
<link href="https://plus.google.com/+TroyHunt" rel="publisher">
<meta content="Troy Hunt: Everything you ever wanted to know about building a secure password reset feature" property="og:title">
<meta content="http://www.troyhunt.com/2012/05/everything-you-ever-wanted-to-know.html" property="og:url">
<meta content="article" property="og:type">
<meta content="Troy Hunt" property="og:site_name">
<meta content="https://lh6.googleusercontent.com/-9Va6Qa-dV-0/UIZ_gj11DrI/AAAAAAAAEGg/WGQ9aiuxjfA/s72-c/SNAGHTML3181e493_2.png?imgmax=800" property="og:image">
<!--[if lt IE 9]> <script src="http://troyhuntblog.apphb.com/html5shiv"></script> <![endif]-->
<script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('headEnd');
</script><script type="text/javascript" async="" src="./Everything you ever wanted to know about building a secure password reset feature_files/embed.js"></script><script async="" type="text/javascript" src="./Everything you ever wanted to know about building a secure password reset feature_files/count.js"></script><script type="text/javascript" async="" src="./Everything you ever wanted to know about building a secure password reset feature_files/a.min.js"></script><script src="./Everything you ever wanted to know about building a secure password reset feature_files/alfie.js" async="" charset="UTF-8"></script><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}
.fb_invisible{display:none}
.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}
.fb_reset > div{overflow:hidden}
.fb_link img{border:none}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}
.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}
.fb_dialog_content{background:#fff;color:#333}
.fb_dialog_close_icon{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif);cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px;top:8px\9;right:7px\9}
.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}
.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}
.fb_dialog_close_icon:hover{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}
.fb_dialog_close_icon:active{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}
.fb_dialog_loader{background-color:#f2f2f2;border:1px solid #606060;font-size:24px;padding:20px}
.fb_dialog_top_left,
.fb_dialog_top_right,
.fb_dialog_bottom_left,
.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}
.fb_dialog_top_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}
.fb_dialog_top_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}
.fb_dialog_bottom_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}
.fb_dialog_bottom_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}
.fb_dialog_vert_left,
.fb_dialog_vert_right,
.fb_dialog_horiz_top,
.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}
.fb_dialog_vert_left,
.fb_dialog_vert_right{width:10px;height:100%}
.fb_dialog_vert_left{margin-left:-10px}
.fb_dialog_vert_right{right:0;margin-right:-10px}
.fb_dialog_horiz_top,
.fb_dialog_horiz_bottom{width:100%;height:10px}
.fb_dialog_horiz_top{margin-top:-10px}
.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}
.fb_dialog_iframe{line-height:0}
.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #3b5998;color:#fff;font-size:14px;font-weight:bold;margin:0}
.fb_dialog_content .dialog_title > span{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yd/r/Cou7n-nqK52.gif)
no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}
body.fb_hidden{-webkit-transform:none;height:100%;margin:0;overflow:visible;position:absolute;top:-10000px;left:0;width:100%}
.fb_dialog.fb_dialog_mobile.loading{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ya/r/3rhSv5V8j3o.gif)
white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}
.fb_dialog.fb_dialog_mobile.loading.centered{max-height:590px;min-height:590px;max-width:500px;min-width:500px}
#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;left:0;top:0;width:100%;min-height:100%;z-index:10000}
#fb-root #fb_dialog_ipad_overlay.hidden{display:none}
.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}
.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}
.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%
}
.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px
}
.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px
}
.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#4966A6),
color-stop(0.5, #355492), to(#2A4887));border:1px solid #29447e;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset,
rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}
.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}
.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}
.fb_dialog_content .dialog_content{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}
.fb_dialog_content .dialog_footer{background:#f2f2f2;border:1px solid #555;border-top-color:#ccc;height:40px}
#fb_dialog_loader_close{float:left}
.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}
.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}
.fb_iframe_widget{display:inline-block;position:relative}
.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}
.fb_iframe_widget iframe{position:absolute}
.fb_iframe_widget_lift{z-index:1}
.fb_hide_iframes iframe{position:relative;left:-10000px}
.fb_iframe_widget_loader{position:relative;display:inline-block}
.fb_iframe_widget_fluid{display:inline}
.fb_iframe_widget_fluid span{width:100%}
.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}
.fb_iframe_widget_loader .FB_Loader{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}
.fb_connect_bar_container div,
.fb_connect_bar_container span,
.fb_connect_bar_container a,
.fb_connect_bar_container img,
.fb_connect_bar_container strong{background:none;border-spacing:0;border:0;direction:ltr;font-style:normal;font-variant:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal;vertical-align:baseline}
.fb_connect_bar_container{position:fixed;left:0 !important;right:0 !important;height:42px !important;padding:0 25px !important;margin:0 !important;vertical-align:middle !important;border-bottom:1px solid #333 !important;background:#3b5998 !important;z-index:99999999 !important;overflow:hidden !important}
.fb_connect_bar_container_ie6{position:absolute;top:expression(document.compatMode=="CSS1Compat"? document.documentElement.scrollTop+"px":body.scrollTop+"px")}
.fb_connect_bar{position:relative;margin:auto;height:100%;width:100%;padding:6px 0 0 0 !important;background:none;color:#fff !important;font-family:"lucida grande", tahoma, verdana, arial, sans-serif !important;font-size:13px !important;font-style:normal !important;font-variant:normal !important;font-weight:normal !important;letter-spacing:normal !important;line-height:1 !important;text-decoration:none !important;text-indent:0 !important;text-shadow:none !important;text-transform:none !important;white-space:normal !important;word-spacing:normal !important}
.fb_connect_bar a:hover{color:#fff}
.fb_connect_bar .fb_profile img{height:30px;width:30px;vertical-align:middle;margin:0 6px 5px 0}
.fb_connect_bar div a,
.fb_connect_bar span,
.fb_connect_bar span a{color:#bac6da;font-size:11px;text-decoration:none}
.fb_connect_bar .fb_buttons{float:right;margin-top:7px}
.fb_edge_widget_with_comment{position:relative;*z-index:1000}
.fb_edge_widget_with_comment span.fb_edge_comment_widget{position:absolute}
.fb_edge_widget_with_comment span.fb_send_button_form_widget{z-index:1}
.fb_edge_widget_with_comment span.fb_send_button_form_widget .FB_Loader{left:0;top:1px;margin-top:6px;margin-left:0;background-position:50% 50%;background-color:#fff;height:150px;width:394px;border:1px #666 solid;border-bottom:2px solid #283e6c;z-index:1}
.fb_edge_widget_with_comment span.fb_send_button_form_widget.dark .FB_Loader{background-color:#000;border-bottom:2px solid #ccc}
.fb_edge_widget_with_comment span.fb_send_button_form_widget.siderender
.FB_Loader{margin-top:0}
.fbpluginrecommendationsbarleft,
.fbpluginrecommendationsbarright{position:fixed !important;bottom:0;z-index:999}
.fbpluginrecommendationsbarleft{left:10px}
.fbpluginrecommendationsbarright{right:10px}</style></head>
<body data-twttr-rendered="true"><iframe id="twttrHubFrameSecure" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" name="twttrHubFrameSecure" src="./Everything you ever wanted to know about building a secure password reset feature_files/hub(1).htm" style="position: absolute; top: -9999em; width: 10px; height: 10px;"></iframe><iframe id="twttrHubFrame" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" name="twttrHubFrame" src="./Everything you ever wanted to know about building a secure password reset feature_files/hub.htm" style="position: absolute; top: -9999em; width: 10px; height: 10px;"></iframe>
<div id="contentWrapper">
<header class="clearFix">
<div id="headerSideBar">
<div class="social clearFix">
<div id="facebook">
<a href="https://www.facebook.com/troyahunt" class="imageLink">
<img alt="Facebook" src="./Everything you ever wanted to know about building a secure password reset feature_files/Facebook.svg">
</a>
</div>
<div id="twitter">
<a href="https://twitter.com/troyhunt" class="imageLink">
<img alt="Twitter" src="./Everything you ever wanted to know about building a secure password reset feature_files/Twitter.svg">
</a>
</div>
<div id="linkedIn">
<a href="http://www.linkedin.com/in/troyhunt" class="imageLink">
<img alt="LinkedIn" src="./Everything you ever wanted to know about building a secure password reset feature_files/LinkedIn.svg">
</a>
</div>
<div id="email">
<a href="mailto:troyhunt@hotmail.com" class="imageLink">
<img alt="Email" src="./Everything you ever wanted to know about building a secure password reset feature_files/Email.svg">
</a>
</div>
<div id="rss">
<a href="http://feeds.feedburner.com/TroyHunt" class="imageLink">
<img alt="RSS" src="./Everything you ever wanted to know about building a secure password reset feature_files/Rss.svg">
</a>
</div>
<div id="googlePlus">
<a href="https://plus.google.com/+TroyHunt" class="imageLink">
<img alt="Google+" src="./Everything you ever wanted to know about building a secure password reset feature_files/GooglePlus.svg">
</a>
</div>
</div>
<!-- <b:section class='panel' id='search'> <b:widget id='CustomSearch1' locked='false' title='Search This Blog' type='CustomSearch'> <b:includable id='Includable1'> <span class='cse-status'> <data:loadingMsg/> </span> <b:include name='quickedit'/> </b:includable> <b:includable id='main'> <div class='widget-content'> <div expr:id='data:widget.instanceId + &quot;_form&quot;'> <span class='cse-status'> <data:loadingMsg/> </span> </div> </div> </b:includable> </b:widget> </b:section> -->
<div class="panel section" id="search">
<div class="widget CustomSearch" id="CustomSearch1">
<div class="widget-content">
<div id="CustomSearch1_form">
<form action="http://www.troyhunt.com/search" method="get" name="input">
<table cellpadding="0" cellspacing="0" class="gsc-search-box">
<tbody>
<tr>
<td class="gsc-input">
<input class="gsc-input" name="q" size="10" type="text"></td>
<td class="gsc-search-button">
<input class="gsc-search-button" title="search" type="submit" value="Search"></td>
</tr>
</tbody>
</table>
</form>
</div>
</div>
</div>
</div>
</div>
<div class="header section" id="header"><div class="widget Header" id="Header1">
<div id="headerTitle">
<h1>
<a href="http://www.troyhunt.com/">
                  troyhunt.com
                </a>
</h1>
<p class="strapline">
Observations, musings and conjecture about the world of software and technology
</p>
</div>
</div></div>
</header>
<div class="clearFix">
<div id="wrapper">
<div class="main section" id="main"><div class="widget Blog" id="Blog1">
<div class="blog-posts hfeed">
<!-- google_ad_section_start(name=default) -->

          <div class="date-outer">
        
<h2 class="date-header"><span>Tuesday, May 22, 2012</span></h2>

          <div class="date-posts">
        
<div class="post-outer">
<meta content="3977663544337573923" itemprop="blogId">
<meta content="2090131566500196324" itemprop="postId">
<h2>
Everything you ever wanted to know about building a secure password reset feature
</h2>
<div class="socialShare">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook_like at300b" fb:like:layout="button_count"><div class="fb-like fb_edge_widget_with_comment fb_iframe_widget" data-ref=".Us_9j98HIJI.like" data-layout="button_count" data-show_faces="false" data-action="like" data-width="90" data-font="arial" data-href="http://www.troyhunt.com/2012/05/everything-you-ever-wanted-to-know.html" data-send="false" fb-xfbml-state="rendered"><span style="height: 20px; width: 122px;"><iframe id="f23080479" name="f3c733a0b8" scrolling="no" title="Like this content on Facebook." class="fb_ltr" src="./Everything you ever wanted to know about building a secure password reset feature_files/like.htm" style="border: none; overflow: hidden; height: 20px; width: 122px;"></iframe></span></div></a>
<a class="addthis_button_tweet at300b"><iframe id="twitter-widget-1" scrolling="no" frameborder="0" allowtransparency="true" src="./Everything you ever wanted to know about building a secure password reset feature_files/tweet_button.1387492107.htm" class="twitter-share-button twitter-tweet-button twitter-count-horizontal" title="Twitter Tweet Button" data-twttr-rendered="true" style="width: 110px; height: 20px;"></iframe></a>
<a class="addthis_button_google_plusone at300b" g:plusone:size="medium"><div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background-color: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 90px; height: 20px; background-position: initial initial; background-repeat: initial initial;"><iframe frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 90px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" tabindex="0" vspace="0" width="100%" id="I0_1389362584363" name="I0_1389362584363" src="./Everything you ever wanted to know about building a secure password reset feature_files/fastbutton.htm" data-gapiattached="true" title="+1"></iframe></div></a>
<a class="addthis_counter addthis_pill_style addthis_nonzero" href="http://www.troyhunt.com/2012/05/everything-you-ever-wanted-to-know.html#" style="display: inline-block;"><a class="atc_s addthis_button_compact"><span></span></a><a class="addthis_button_expanded" target="_blank" title="View more services" href="http://www.troyhunt.com/2012/05/everything-you-ever-wanted-to-know.html#">17</a></a>
<div class="atclear"></div></div>
</div>
<p>
Tuesday, May 22, 2012
</p>
<div class="post-body entry-content">
Recently I’ve had a couple of opportunities to think again about how a secure password reset function should operate, firstly whilst building this functionality into <a href="https://asafaweb.com/">ASafaWeb</a> and secondly when giving some direction for someone else doing a similar thing. In that second instance, I wanted to point them to a canonical resource on the ins and outs of securely implementing a reset function. Problem is though, there isn’t one, at least not covering everything I believe is important. So here it is.<br>
<br>
You see, the world of forgotten passwords is actually a little murky. There are plenty of different perfectly legitimate angles and a bunch of pretty bad ones as well. Chances are you’ve experienced each many times as an end user so let me try and draw on some of these examples to see who’s doing it well, who’s not and what you need to focus on to get it right in your app.<br>
<br>
<a name="more"></a><h4>
Password storage: hashing, encrypting and (gasp!) plain text</h4>
We can’t talk about what to do with forgotten passwords until we talk about how they’re stored in the first place. We’ve got three primary ways in which passwords will usually be persisted in a database:<br>
<br>
<ol>
<li>Plain text. You have a password column and it sits there in the clear. </li>
<li>Encrypted. Usually using symmetric encryption (the one key to both encrypt and decrypt), the encrypted password also sits there in a single column. </li>
<li>Hashed. A one-way process (you can hash but not un-hash), the password is <em>hopefully</em> accompanied by a salt, each of which sit in their own columns. </li>
</ol>
Let’s just get that first one out of the way quickly; <strong><em>never store passwords in plain text!</em></strong> Ever. One little <a href="http://www.troyhunt.com/2010/05/owasp-top-10-for-net-developers-part-1.html#">injection</a> vulnerability, one sloppy backup or any one of a dozen other simple little slipups and it’s game over, all your passwords – sorry – <strong><em>all your customer’s passwords</em></strong> are in the public domain. Which, of course, means a better than average chance that <a href="http://www.troyhunt.com/2011/06/brief-sony-password-analysis.html">all their passwords for all their other accounts on totally independent systems are in the public domain</a>. And it’s your fault.<br>
<br>
Encryption is better, but still flawed. The problem with encryption is decryption; it’s possible to take those crazy looking ciphers and convert them back to plain text and once that happens, you’re back with readable passwords. How does this happen? A little flaw sneaks into the code which decrypts the password and makes it publicly accessible – that’s one way. The machine the encrypted data sits on gets owned – that’s another way. Another way again is that the database backup is obtained and someone also gets their hands on the encryption key, which is frequently pretty poorly managed.<br>
<br>
Which leads us with hashing. The idea of hashing is that it only goes one way; the only way you can ever match a password from a user with its hashed partner is to hash the input and compare it. In order to prevent attacks from tools such as rainbow tables, we add randomness to the process by using a salt (check out <a href="http://www.troyhunt.com/2011/06/owasp-top-10-for-net-developers-part-7.html#uds-search-results">my post on cryptographic storage</a> for the full picture). The bottom line is that when done properly, we can have a high degree of confidence that hashed passwords should never again become plain text (I’ll save the respective merits of various hashing algorithms for a later post).<br>
<br>
A quick argument about hashing versus encrypting; the only reason you should ever need to encrypt and not hash is when you want to see the plain text password and <strong><em>you should never want to see this</em></strong>, at least not in a typical website scenario. If you do, you’re probably doing something else wrong!<br>
<br>
<a name="nopornforyou"></a>
<p style="background-color: #f7c3c3; color: #ba1a1a; padding: 10px;"><strong>Warning!</strong><br>
A little bit further down this page is a partial screen grab of the website AlotPorn. It’s been very carefully cropped and you won’t see anything you won’t see at the beach, but <a href="http://news.ycombinator.com/item?id=4280440">some people are concerned about it being “NSFW”</a>. As such, I’m providing an option to change the picture to one of fluffy bunnies by <a href="http://www.troyhunt.com/2012/05/everything-you-ever-wanted-to-know.html#" onclick="document.getElementById(&#39;porn&#39;).src=&#39;http://lh5.googleusercontent.com/-p1aJX98-7aI/UJRIkdOXwdI/AAAAAAAAELw/RTgq7Q47Zbg/s620/a-pair-of-cute-fluffy-bunnies_2560x1024.jpg&#39;;return false;">clicking here</a>. (The fluffy bunnies are not wearing any clothes.)
</p>
<h4>
Always reset, <em>never</em> remind</h4>
Ever been asked to build a password <em>reminder</em> function? Take a step back and work through that request in reverse; why is a “reminder” needed? Because the user has forgotten their password. What are we really trying to do? Help them log back in again.<br>
<br>
I get it – the word “reminder” is (often) used colloquially – but what we’re really setting out to do here is to <em><strong>securely help the user get back online</strong></em>. Because we want to be secure, there are two reasons why a reminder (i.e. actually sending them their password) won’t work:<br>
<br>
<ol>
<li>Email is an insecure channel. In the same way as we wouldn’t send anything sensitive over HTTP (we’d use HTTPS), the transport layer for email is not secure. Actually, it’s much worse than just sending info over an insecure transport protocol as your mail often persists in storage, is accessible by system admins, is readily forwarded and redistributed, is accessed by malware and so on and so forth. <strong><em>Unencrypted mail is an extremely insecure channel.</em></strong> </li>
<li><strong><em>You shouldn’t have access to the password anyway.</em></strong> Go back to that previous section about storage – all you should have is the password hash (with a nice strong salt), which means there’s no way you can pull the password back out and email it around anyway. </li>
</ol>
Let me demonstrate the problem courtesy of <a href="http://www.usoutdoor.com/">usoutdoor.com</a>: Here’s a typical login page:<br>
<br>
<div align="center">
<img alt="Requesting a password reminder from usoutdoor.com" border="0" height="481" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML3181e493_2.png" style="background-image: none; border-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
Clearly the first problem is that the logon page hasn’t been loaded over HTTPS, but then they’ve also gone and offered to “Send Password”. Now maybe that’s an example of the earlier mentioned colloquial use of the term, let’s dig a big further and see what happens:<br>
<br>
<img alt="Password sent by usoutdoor.com" border="0" height="259" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML318c0423.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"><br>
<br>
Not looking much better, unfortunately and the email confirms the problem:<br>
<br>
<div align="center">
<img alt="Password sent in plain text by usoutdoor.com" border="0" height="258" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML22b5d853.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
So this tells us a couple of important things about usoutdoor.com:<br>
<br>
<ol>
<li>They’re not hashing the password. At best they’re encrypting it but they’re quite possibly just storing it in the clear; we have no evidence to the contrary. </li>
<li>They’re sending a persistent password – one we can go back and keep using over and over – via an insecure channel. </li>
</ol>
Now that we’re clear on that, the trick becomes how we go about ensuring the reset process happens securely and the first step to doing that is to establish that the requestor is actually authorised to perform the reset. In other words, we need a bit of identity verification but before we do that, let’s look at what happens when identity is confirmed without first verifying the requestor is actually the owner of the account.<br>
<br>
<h4>
Username enumeration and the impact on anonymity</h4>
Here’s a problem best illustrated graphically. The problem is this:<br>
<br>
<img id="porn" alt="Alotporn.com confirming existence of an account" border="0" height="480" src="./Everything you ever wanted to know about building a secure password reset feature_files/image91.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"><br>
<br>
You see that? Focus now – we’re looking at the message which says “There is no user registered with this email address”. The problem, of course, is when a site like this confirms there <em>is</em> a user registered with that email address. Bingo – you’ve just uncovered your husband’s / boss’s / neighbour’s porn fetish!<br>
<br>
Of course porn is a bit of a canonical example of where privacy is important, but the risk of matching an individual to a particular website goes beyond a potentially embarrassing disclosure such as this. One risk that arises is one of social engineering; once an attacker can match a person to a service, they have a piece of information that they can begin leveraging. For example, they may contact the individual whilst posing as a representative of the website and ask for additional information in a <a href="http://www.fbi.gov/news/stories/2009/april/spearphishing_040109">spearphishing</a> attack.<br>
<br>
This practice also opens up the risk of “username enumeration” where an entire collection of usernames or email addresses can be validated for existence on the website simply by batching requests and looking at the responses. Got a list of everyone’s email address from the office and a few spare minutes to do some scripting? You can see the problem!<br>
<br>
So what’s the alternative? Well it’s actually quite easy and <a href="https://www.entropay.com/">Entropay</a> executes it very well:<br>
<br>
<div align="center">
<img alt="Entropay emailing instructions to the provided address" border="0" height="395" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML2fc7ceb3.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
What Entropay have done here is disclosed absolutely nothing about the existence of the email address in their system <strong><em>to someone who doesn’t own that address</em></strong>. If you <em>do</em> own that address and it doesn’t exist in their system, you get a nice little email like this:<br>
<br>
<div align="center">
<img alt="Entropay email explaining the account doesn&#39;t exist" border="0" height="487" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML3203cc13.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
Of course there may be legitimate use cases where someone either <em>thinks </em>they registered at a website – but didn’t – or they did but with a different email address. The response above deals with both those scenarios very nicely. Obviously if the address was valid you’d get an email which would facilitate a password reset.<br>
<br>
The thing about the approach taken by Entropay is that identity verification happens via <em>email</em> before any sort of online verification. One approach some sites take is to prompt the user with a secret question (more on this shortly) <em>before</em> the reset can begin but of course the problem with this is that you have to answer the question along with providing some form of identification (either email or username) which then makes it almost impossible to respond intuitively without disclosing the existence of the account to an anonymous user.<br>
<br>
There is a <em>slight </em>usability tax to pay using this approach and it’s that there is no immediate feedback when an invalid account is attempted to be reset. Of course this is the whole reason why we’re sending an email in the first place but from a legitimate end user perspective, if they’ve entered an invalid address then the first they’re going to know about it is when the email arrives. This may cause some frustration on their behalf, but it’s a small trade-off for an infrequent process.<br>
<br>
Just one more slightly tangential note on this while I’m here – log on facilities which disclose the validity of the username or email address have exactly the same problem. Always defer to the user with a “You username and password combination is invalid” message as opposed to explicitly confirming the existence of an identity (i.e. your username was correct but your password was incorrect).<br>
<br>
<h4>
Sending a reset password versus sending a reset URL</h4>
The next concept we have to deal with relates to how the password is reset and there are two common approaches:<br>
<br>
<ol>
<li>Generate a new password on the server and email it </li>
<li>Email a unique URL which will facilitate a reset process </li>
</ol>
Despite <a href="http://www.asp.net/web-forms/tutorials/security/admin/recovering-and-changing-passwords-cs">plenty of guidance to the contrary</a>, the first point is really not where we want to be. The problem with doing this is that it means a <strong><em>persistent password</em></strong> – one you can go back with and use any time – has now been sent over an insecure channel and resides in your inbox. Chances are your inbox syncs to your mobile device(s) and possibly to your mail client plus it may reside online in your web-based mail service for who knows how long. The point is that <strong><em>your mailbox should not be considered a long term secure storage facility</em></strong>.<br>
<br>
But there’s one more big problem with the first approach in that it makes the malicious lockout of an account <em>dead simple</em>. If I know the email address of someone who owns an account at a website then I can lock them out of it whenever I please simply by resetting their password; it’s denial of service attack served up on a silver platter! This is why a reset is something that should only happen after successfully verifying the right of the requestor to do so.<br>
<br>
When we talk about a reset URL, we’re talking about a website address which is <strong><em>unique to this specific instance of the reset process</em></strong>. Obviously it must be random and not something guessable nor should it contain any external references to the account for which it’s facilitating the reset. For example, a reset URL should not simply be a path such as “Reset/?username=JohnSmith”.<br>
<br>
What we want to do is create a unique token which can be sent in an email as part of the reset URL then matched back to a record on the server alongside the user’s account thus confirming the email account owner is indeed the one attempting to reset the password. For example, the token may be “3ce7854015cd38c862cb9e14a1ae552b” and is stored in a table alongside the ID of the user performing the reset and the time at which the token was generated (more on that in a moment). When the email is sent out, it contains a URL such as “Reset/?id=3ce7854015cd38c862cb9e14a1ae552b” and when the user loads this, the page checks for the existence of the token and consequently confirms the identity of the user and allows the password to be changed.<br>
<br>
Now of course because the process above is going to (hopefully) give the user the ability to create a new password, we need to ensure that the URL is loaded over HTTPS. No, <a href="http://www.troyhunt.com/2011/01/ssl-is-not-about-encryption.html">posting to HTTPS is not enough</a>, that URL with the token must implement transport layer security so that the new password form cannot be <a href="http://en.wikipedia.org/wiki/Man-in-the-middle_attack">MITM</a>’d and the password the user creates is sent back over a secure connection.<br>
<br>
The other thing we want to do with a reset URL is to time limit the token so that the reset process must be completed within a certain duration, say within an hour. What this does is ensures that the window for which the reset can occur is kept to a minimum so should anyone obtain the reset URL they can only action it within a very small window. Of course an attacker can always go and begin the reset process again but they’ll then need to obtain another unique reset URL.<br>
<br>
Finally, we want to ensure that this is a one-time process. Once the reset process is complete, the token should be deleted so that the reset URL is no longer functional. As with the previous point, this is to ensure an attacker has a very limited window in which they can abuse the reset URL. Plus of course the token is no longer required if the reset process has completed successfully.<br>
<br>
Some of these steps may seem a little excessive, but they don’t detract at all from the usability of the feature and they <em>do</em> add to the security, albeit in circumstances we’d hope would be uncommon. In 99% of cases, the user is going to action the reset within a very short period and they’re not going to reset the password again in the immediate future.<br>
<br>
<h4>
The role of CAPTCHA</h4>
Ah CAPTCHA, the security measure we all love to hate! In fact CAPTCHA isn’t so much a security measure as it is an identification measure – are you a human or are you a robot (or an automated script, as it may be). The intention is to avoid the automated submission of forms which of course <em>could</em> be used as an attempt to breach security. In a password reset context, a CAPTCHA means the reset feature can’t be brute-forced either to spam an individual or to attempt to identify the existence of accounts (which of course won’t be possible if you’ve followed the guidance in the identity verification section earlier on).<br>
<br>
Of course CAPTCHA itself is not perfect; there are numerous precedents of “breaking” it programmatically and achieving reasonable success rates in the range of 60-70%. Then you have the approach I demonstrated in my post about <a href="http://www.troyhunt.com/2012/01/breaking-captcha-with-automated-humans.html">Breaking CAPTCHA with automated humans</a> where you could pay humans a fraction of a cent to solve each CAPTCHA and get a 94% success rate. So it has faults, but it does (slightly) raise the barrier to entry.<br>
<br>
Let’s take a look at PayPal’s approach:<br>
<br>
<img alt="PayPal implementing CAPTCHA before password reset" border="0" height="614" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML32291b43.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"><br>
<br>
In this case, the reset process simply can’t begin until the CAPTCHA is solved so <em>in theory</em>, you can’t automate the process. In theory.<br>
<br>
For most web applications though, this is going to be overkill and will <em>definitely</em> pose a usability overhead – people simply don’t like CAPTCHAs! A CAPTCHA is also the sort of thing you can retrofit later on if it’s required. If the service begins to get abused (this is where logging is important – more on that soon), dropping in a CAPTCHA is a piece of cake.<br>
<br>
<h4>
Secret questions and answers</h4>
With what we’ve looked at so far, we’ve been able to reset the password simply by having control of the email account. I say “simply”, but of course illegally gaining access to someone’s email account <em>should </em>be a hard thing. But <a href="http://en.wikipedia.org/wiki/Sarah_Palin_email_hack">it isn’t always</a>.<br>
<br>
Actually, that link above is about Sarah Palin having her Yahoo! account hacked and it serves a couple of purposes; firstly, it illustrates how easily (some) email accounts can be breached and secondly, it shows how poor secret questions can be abused – but we’ll come back to that one.<br>
<br>
The problem with password resets which are 100% dependent on email is that the account integrity of the site you’re trying to reset the password on then becomes 100% dependent on the email account integrity. Whoever has access to your email <strong><em>now has access to any account that can be reset purely by receiving an email</em></strong>. For these accounts, your email is truly the skeleton key to your online life.<br>
<br>
One way of mitigating this risk is to implement a secret question and answer pattern. You’ve no doubt seen this before; choose a question for which only you <em>should</em> know the answer then you may be prompted for this before you’re able to perform a password reset. It gives that bit of additional assurance that the person attempting to perform the reset is indeed the owner of the account.<br>
<br>
Getting back to Sarah Palin, what went wrong here is that the answers to her secret question(s) were easily discoverable. Particularly once you have a highly public profile, information such as mother’s maiden name, education history or where someone might have lived in the past really isn’t that secret. In fact much of this can easily be discovered for almost anyone. And so it was with Sarah:<br>
<br>
<blockquote>
The hacker, David Kernell, had obtained access to Palin's account by looking up biographical details such as her high school and birthdate and using Yahoo!'s account recovery for forgotten passwords.</blockquote>
This is primarily a design flaw on Yahoo!’s part; by providing or allowing such basic questions they fundamentally undermined the value of the secret question and indeed undermined the security of their system. Of course password resets of an email account are always going to be trickier because you may well not be able to validate ownership by sending the account holder an email (short of having a secondary address on file), but fortunately there aren’t a lot of use-cases these days for building such a system.<br>
<br>
Getting back to secret questions, one option is to allow the user to self-construct their own questions. The problem with this though is that you end up with either painfully obvious questions:<br>
<br>
<strong>What colour is the sky?</strong><br>
<br>
Questions which can put people in an uncomfortable position when a <em>human</em> uses the secret question for verification (such as in a call centre):<br>
<br>
<strong>Who did I sleep with at the Christmas party?</strong><br>
<br>
Or frankly stupid questions:<br>
<br>
<strong>How do you spell “password”?</strong><br>
<br>
When it comes to secret questions, people need to be saved from themselves! In other words, the site itself should define the secret question, or rather define a <em>series </em>of secret questions from which the user can choose. And not just choose <em>one</em> either; ideally, the user should define two or more secret questions <strong><em>at the time of account registration</em></strong> which can then be used as a second channel of identity verification. Having multiple questions adds a higher degree of confidence to the verification process plus gives you opportunity to add randomness (not always show the same question) plus provides a bit of redundancy should someone legitimate forget an answer.<br>
<br>
So what makes a good secret question? There are a few different factors:<br>
<br>
<ol>
<li>It should be <strong>concise</strong> – the question is to the point and unambiguous </li>
<li>The answer is <strong>specific</strong> – you don’t want a question which could be answered in different ways by the same person </li>
<li>The possible answers must be <strong>diverse</strong> – a question about someone’s favourite colour would result in a small subset of possible answers </li>
<li>Answer <strong>discovery </strong>should be hard – if you can readily find the answer for <em>anyone</em> (think high-profile people) then it’s no good </li>
<li>The answer must be <strong>constant</strong> over time – asking for someone’s favourite movie may result in a different answer a year from now </li>
</ol>
As it happens, there’s a website dedicated to good security questions which, unsurprisingly, is at <a href="http://goodsecurityquestions.com/">GoodSecurityQuestions.com</a>. Some of these seem quite good, others fail some of the tests above, particularly the “discovery” test.<br>
<br>
Let me walk you through how PayPal implements their secret questions and in particular, the extent they go verify identities. Earlier on we saw the page to begin the process (the one with the CAPTCHA), here’s what happens once you drop in an email address and solve the CAPTCHA:<br>
<br>
<div align="center">
<img alt="PayPal sending an email to begin the reset process" border="0" height="380" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML230b5073.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
Which results in an email like this:<br>
<br>
<img alt="The PayPal email to begin the reset process" border="0" height="528" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML2311ff93.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"><br>
<br>
So far this is all very normal, but here’s what’s behind that reset URL:<br>
<br>
<div align="center">
<img alt="Choosing to validate identity by a secret question on PayPal" border="0" height="472" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML327843c3.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
Right, so now the secret questions come into play. Actually, PayPal also allows password reset by verifying a credit card number so there’s an additional channel there which many sites won’t have access to. I simply cannot change my password without answering <em>both </em>secret questions (or knowing the card number). Even if someone takes over my email account, they cannot reset the PayPal account unless they know some intimate information about me. What sort of information? Here are the secret question options PayPal gives you:<br>
<br>
<img alt="Possible secret questions on PayPal" border="0" height="526" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML32f06573.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"><br>
<br>
The question about the school and the hospital might be a bit dubious on the “discoverability” test but the others aren’t too bad. But to add to the security, PayPal requires further verification of identity to <em>change</em> secret question answers:<br>
<br>
<div align="center">
<img alt="Confirming identity with a credit card on PayPal" border="0" height="446" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML32cd7d83.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
PayPal is a pretty utopian example of a secure password reset: they implement CAPTCHA to mitigate against brute force, require two secret questions and then require another form of identify verification altogether just to change the answers – and that’s after you’re already logged in. Of course we’d <em>expect</em> this from PayPal; they’re a financial institution and they handle lots of money. This doesn’t mean every password reset process should follow these steps – that’s overkill in most cases – but it’s a good reference point for when security is serious business.<br>
<br>
One nice thing about the secret question approach is that if you haven’t implemented it from day one, it can be a later addition if the risk profile as the asset being protected demand it. A good case in point is Apple who just recently rolled out this mechanism. When I went to update an app on iPad the other day, I was prompted with the following:<br>
<br>
<div align="center">
<img alt="Apple asking for additional security info" border="0" height="187" src="./Everything you ever wanted to know about building a secure password reset feature_files/Photo-19-04-12-10-53-478.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="250"></div>
This then presented me with a screen to define several secret question and answer pairs and a rescue email:<br>
<br>
<div align="center">
<img alt="Multple secret question and answer pairs on the iPad" border="0" height="417" src="./Everything you ever wanted to know about building a secure password reset feature_files/Photo-19-04-12-10-54-3211.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="365"></div>
<br>
As with PayPal, the questions are pre-determined and some of them are actually pretty good:<br>
<br>
<div align="center">
<img alt="Some of Apple&#39;s secret question options" border="0" height="221" src="./Everything you ever wanted to know about building a secure password reset feature_files/Photo-19-04-12-10-54-387.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="365"></div>
<br>
Each of the three question and answer pairs presents a different set of possible questions so there are quite a number of different ways an account can be configured.<br>
<br>
The other thing to consider with the answer component of the secret question is storage. Sitting it in the DB is plain text poses similar risks to doing the same with the password, namely that a database disclosure will immediately reveal the value and not only put the app at risk but quite possibly other totally unrelated apps which depend on the same secret questions (it’s <a href="http://www.troyhunt.com/2011/01/why-your-apps-security-design-could.html">the Acai berry conundrum</a> all over again). Secure hashing (a strong algorithm and cryptographically random salt) is an option, however unlike most password scenarios, there may be a legitimate reason to make the answer visible in plain text. A typical scenario is when a human operator is verifying an identity over the telephone. Now of course hashing is still feasible (the operator can simply enter the answer the customer provides), but at worst, the secret answer should have some level of cryptographic storage, even if it’s just symmetric encryption. Bottom line: <strong><em>treat secret answers as secret!</em></strong><br>
<br>
Just one more thing on secret questions and answers – they’re more vulnerable to social engineering. Attempting to directly elicit an account’s password out of someone is one thing, striking up a conversation with them about their education history (a common secret question) is quite another. In fact you can quite legitimately have a discussion with someone about many aspects of their life which could constitute the secret question and not arouse suspicion. Of course the very intention of a secret question is that it relates to someone’s life experiences so that it is memorable and therein lies the problem – <strong><em>people like to talk about their life experiences!</em></strong> There’s not a lot you can do about that other than to ensure that the available secret questions are <em>less</em> likely to be the kind that could be socially engineered out of someone.<br>
<br>
<h4>
Two factor authentication</h4>
Everything you’ve read up until now has involved verifying an identity based on <strong><em>things the requestor knows</em></strong>. They know their email address, they know how to access their email (i.e. they know their email address password) and they know the answers to some secret questions. “Knowledge” – or something you know – is considered to be one factor of authentication, the other two common factors are <strong><em>something you have</em></strong>, such as a physical device, and <strong><em>something you are</em></strong> such as your finger prints or retina.<br>
<br>
In most scenarios it’s a bit infeasible to perform biologic validation, particularly when we’re talking about web application security, so it’s usually the second attribute – something you have – which is used in two factor authentication (2FA). One common approach to this second factor is to use a physical token such as an <a href="http://australia.emc.com/security/rsa-securid.htm">RSA SecurID</a>:<br>
<br>
<div align="center">
<img alt="An RSA SecurID" border="0" height="114" src="./Everything you ever wanted to know about building a secure password reset feature_files/SID7007.gif" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="264"></div>
<br>
Common uses for a physical token include authenticating to corporate VPNs and financial services. The premise involves authenticating to a service using both a password and the code on the token (which rotates frequently) combined with a PIN. In theory, an attacker must know the password, have the token and also know the token PIN in order to identify themself. In a password reset scenario the password is obviously not known, but possession of the token can be used to verify the legitimacy of the account claim. Of course like any security implementation, <a href="http://www.wired.com/threatlevel/2011/08/how-rsa-got-hacked/">it’s not fool proof</a>, but certainly it raises the bar to entry.<br>
<br>
One of the main problems with this approach is the cost and logistics of implementation; we’re talking distributing physical devices to every customer and educating them about a new process. Then of course they actually need to have the device on them when they need it which isn’t always the case with a physical token. Another option is to implement the second factor of authentication using SMS which in a 2FA scenario can be used as validation that the person instrumenting the reset process actually has the mobile phone of the account holder. Here’s what Google does:<br>
<br>
<img alt="Enabling 2FA on Google" border="0" height="547" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML1189cef3.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"><br>
<br>
Now you also need to have <a href="http://googleblog.blogspot.com.au/2011/06/ensuring-your-information-is-safe.html">2-step verification enabled</a>, but what this means is that the next time you need to reset your password, your mobile phone can become your second factor of authentication. Let me demonstrate how to initiate this this via my iPhone, for reasons which will soon become apparent:<br>
<br>
<div align="center">
<img alt="Starting a password reset on Google" border="0" height="317" src="./Everything you ever wanted to know about building a secure password reset feature_files/Photo-20-05-12-11-28-348.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
After identifying the email address of the account, Google recognises that 2FA has been enabled and we’re able to reset the account via verification that can be SMS’d to the account holders mobile phone:<br>
<br>
<img alt="Reseting a Google account when 2FA is enabled" border="0" height="314" src="./Everything you ever wanted to know about building a secure password reset feature_files/image20.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"><br>
<br>
We now need to elect to begin the reset process:<br>
<br>
<div align="center">
<img alt="Actioning a 2FA password reset on Google" border="0" height="192" src="./Everything you ever wanted to know about building a secure password reset feature_files/image24.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
This sends an email off to the registered address:<br>
<br>
<img alt="Confirmation of a 2FA reset on Google" border="0" height="251" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML13bc4ab4.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"><br>
<br>
The email then contains a reset URL:<br>
<br>
<div align="center">
<img alt="Email from Google to begin a 2FA password reset" border="0" height="366" src="./Everything you ever wanted to know about building a secure password reset feature_files/image255.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
When the reset URL is accessed, the SMS is sent and the website prompts for it to be entered:<br>
<br>
<img alt="Google prompt for the code from a 2FA reset" border="0" height="331" src="./Everything you ever wanted to know about building a secure password reset feature_files/image32.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"><br>
<br>
Here’s that SMS:<br>
<br>
<div align="center">
<img alt="A reset code SMS&#39;d by Google" border="0" height="239" src="./Everything you ever wanted to know about building a secure password reset feature_files/image16.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
After it’s entered into the browser, we’re back into classic password reset territory:<br>
<br>
<img alt="Successful 2FA identity verification on Google" border="0" height="331" src="./Everything you ever wanted to know about building a secure password reset feature_files/image12.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"><br>
<br>
This might seem a little verbose – and it is (I think that 3rd iPhone screen could go) – but it does validate that the person conducting the reset has access to both the email address and the account holder’s mobile phone. This could well be 9 times more secure than an email only channel for password resets, but there’s a problem…<br>
<br>
The problem has to do with smart phones. The device below can verify only one factor of authentication – it can receive an SMS but not an email:<br>
<br>
<div align="center">
<img alt="A Nokia phone with no email capability" border="0" height="252" src="./Everything you ever wanted to know about building a secure password reset feature_files/9727818.gif" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="126"></div>
<br>
However this device can receive an SMS <em>and</em> receive a reset email:<br>
<br>
<div align="center">
<img alt="An iPhone 4 with email and SMS capability" border="0" height="300" src="./Everything you ever wanted to know about building a secure password reset feature_files/iphone-4-425x4808.jpg" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="156"></div>
<br>
The problem is that when we view email as the first factor of authentication then we view either SMS (or even an app generating tokens) as the second, these days that’s all bundled up into the one device. Of course what this means is that if someone gets their hands on your smartphone then all that convenience suddenly means you’re back to one channel; that second factor of “something you have” means you also have the first factor. And all of that’s behind a single 4 digit PIN – if the phone has even has a PIN in the first place <em>and</em> has been locked.<br>
<br>
Yes, 2FA as Google has implemented it certainly provides additional security, but it’s not fool proof and it’s certainly not dependent on two entirely autonomous channels.<br>
<br>
<h4>
Resetting via username versus resetting via email address</h4>
Should you allow a reset only via email address? Or should you be able to reset via username too? The problem with resetting via username is that there’s no way to notify the user if the username was invalid that <em>doesn’t</em> disclose the fact that someone else may have an account with that name. In the previous section, a reset via email ensured the legitimate owner of that email could always receive feedback without disclosing its existence in the system publicly. You can’t do that with just a username.<br>
<br>
So the short answer is: email only. If you’re trying to do it with username then you’re going to have cases where the user is left wondering what’s going on <em>or </em>you’re disclosing the existence of accounts. Yes, it’s only a username and not an email address and yes, anybody can choose any (available) username they’d like but there’s still a good chance you’re going to implicitly disclose account holders due to the propensity of username reuse.<br>
<br>
So what happens if someone forgets their username? Assuming the username isn’t already the email address (which is often the case), then the process is similar to how a password reset begins – enter the email address then send a message to that address without disclosing its existence. The only difference is that this time around, the message simply contains the username rather than a password reset URL. Either that or the email explains that there is no account on file for that address.<br>
<br>
<h4>
Identity verification and email addresses accuracy</h4>
A key aspect of password resets – arguably <em>the</em> key aspect – is verifying the identity of the person attempting to perform the reset. Is this indeed the legitimate owner of the account? Or someone attempting to either break into it or inconvenience the owner?<br>
<br>
Email is clearly the most convenient, most ubiquitous channel for verifying an identity. It’s not fool proof and there are many cases where simply being able to receive emails at the account holder’s address is not sufficient if a high degree of identity confidence is required (hence the use of 2FA), but it’s almost always the starting point of a reset process.<br>
<br>
One thing that’s critical if email is going to play a role is confidence that the email address is actually correct to begin with. If someone has a character wrong then clearly resets aren’t going to get through. An email verification process at the point of registration is a sure way of ensuring the address is correct. We’ve all seen this in practice; you register, an email is sent to you with a unique URL you need to click through to which therefore verifies you are indeed the holder of that email account. Not being able to log on until this process is complete ensures there is motivation to validate the email address.<br>
<br>
As with many aspects of security, this model imposes a usability overhead in exchange for giving us a greater degree of security in terms of confidence in the user’s identity. This might be fine for a site where the user places a high value on being able to successfully register and is happy to add one more step to the process (paid services, banking, etc.) but it’s the sort of thing they may well just walk away from if they perceive the account as being a “throwaway” such as simply a means of commenting on a post.<br>
<br>
<h4>
Identifying who initiated the reset process</h4>
Clearly there is scope for abusing the password reset feature and evildoers can do so in a number of different ways. One very easy trick we can use to help verify the source of the request – one which <em>usually</em> works – is to attach the IP address of the requestor to the reset email. What this does is equips the recipient with <em>some </em>information to identify the source of the request.<br>
<br>
Here’s an example from the reset feature I’m presently building into ASafaWeb:<br>
<br>
<div align="center">
<img alt="An ASafaWeb password reset email with info about the requestor&#39;s IP" border="0" height="311" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTMLfe785f6.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<br>
That “find out more” link takes you off to <a href="http://www.ip-adress.com/">ip-adress.com</a> which will give you things like the location and organisation of the requestor:<br>
<br>
<div align="center">
<img alt="IP address info about the password reset requestor" border="0" height="253" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTMLfb62013.png" style="background-image: none; border-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="413"></div>
<br>
Now of course anyone wanting to hide their identity has numerous ways of obfuscating their real IP address, but this is a neat little way to put some form of identity to the requestor and in <em>most</em> cases, it will give you a good idea of who was behind the reset request.<br>
<br>
<h4>
Notifying a change via email</h4>
One theme which has pervaded across this post is communication; tell the account holder as much as possible about what is going on at each step in the process without disclosing anything which could be used for nefarious purposes. It’s the same thing once the password has actually been changed – <strong><em>let the owner know!</em></strong><br>
<br>
A change of password can come from one of two different sources:<br>
<br>
<ol>
<li>Changing the password while already logged on because the owner wants something different </li>
<li>Resetting the password while logged off because the owner has forgotten it </li>
</ol>
Whilst this is a post primarily about resets, a notification in the first example above mitigates the risk of someone else changing the password without the legitimate owner’s knowledge. How could this happen? A very common scenario is that someone else has obtained the legitimate owner’s password (reused one breached from another location, key logged, easily guessable, etc.) and has decided to change it and lock them out. Without an email notification, the real owner has no idea of the change.<br>
<br>
Now of course in the reset scenario the owner must have already initiated the process (or defeated the various identity verification measures outlined above) so the change <em>shouldn’t</em> come as a surprise to them, but email notification is positive feedback and additional verification. Besides, it makes for a consistent experience in both of the scenarios above.<br>
<br>
Oh, and in case it’s not already obvious, <strong><em>don’t email them the new password!</em></strong> Some of you may laugh, but <a href="http://www.dotnetnuke.com/">it happens</a>:<br>
<br>
<div align="center">
<img alt="DotNetNuke emailing a new password in plain text" border="0" height="401" src="./Everything you ever wanted to know about building a secure password reset feature_files/SNAGHTML121397c3.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<h4>
Log, log and then log some more</h4>
The thing about a password reset feature is that it’s ripe for abuse, either by an attacker wanting to gain access to an account of someone just wanting to cause mischief and inconvenience for the account holder or system owner. Many of the practices discussed above will help mitigate abuse, but they won’t stop it and they certainly won’t stop people from attempting to misuse the feature.<br>
<br>
One practice that can be absolutely invaluable for detecting malicious behaviour is logging and I mean <strong><em>really extensive logging</em></strong>. Log failed log on attempts, log password resets, log password changes (i.e. while the user is already logged on) and basically log anything you can that will help you identify what’s going in should you really need it in the future. Even log individual <em>parts </em>of the process, for example a good reset feature will involve initiating the reset via the website (log the request and log attempts to reset with an invalid username or email), log the visit to the website with the reset URL (including attempts to use an invalid token) then log the success or failure of the secret question’s answer.<br>
<br>
Now when I say logging, you don’t just want a record of the fact the page was loaded, you want to collect as much info as you can <strong><em>so long as it’s not sensitive</em></strong>. People, <strong><em>please don’t log the password!</em></strong> What you do want to log is the identity of the authenticated user (they’ll be authenticated if they’re <em>changing</em> an existing password or if they’re attempting to reset <em>someone else’s</em> while logged in), any attempted usernames or email addresses plus any reset tokens they attempted to use. But you also want to log things like IP address and if possible, even request headers. This allows you to reconstruct not just <em>what </em>the person (or attacker) was attempting to do, but <em>who</em> they were.<br>
<br>
<h4>
Delegating responsibility to other providers</h4>
If this all just seems like a lot of hard work, you’re not alone in your thinking. The reality is that building a secure account management facility isn’t simple. It’s not that it’s technically hard, it’s just that there are a lot of nuts and bolts involved. It’s not just resets, there’s the whole registration process, secure password storage, handling multiple invalid login attempts and so on and so forth. Whilst <a href="http://www.troyhunt.com/2011/10/5-minute-wonders-aspnet-membership.html">I advocate using pre-built functionality such as the ASP.NET membership provider</a>, there’s still a lot of work to be done.<br>
<br>
These days there are numerous third party providers who are happy to take the pain of writing all this yourself and abstract it all away into a managed service. The options include OpenID, OAuth and even Facebook, among others. Some people <a href="http://www.codinghorror.com/blog/2008/05/openid-does-the-world-really-need-yet-another-username-and-password.html">swear by this model</a> (indeed OpenID has proven to be very successful on Stack Overflow), but then others <a href="http://wekeroad.com/2010/11/17/open-id-is-a-party-that-happened/">literally find it a nightmare</a>.<br>
<br>
Undoubtedly, a service like OpenID takes a number of problems away from the developer but also undoubtedly, it introduces all new ones. Does it have a role to play? Yes, but clearly we’re not seeing authentication providers adopted en mass. Banks, airlines even shopping – I can’t think of a single one which doesn’t implement their own authentication mechanism and there are clearly some very good reasons for that.<br>
<br>
<h4>
Malicious resets</h4>
One thing about each of the examples above is that the old password is only rendered useless <strong><em>after the account owner’s identity has been verified</em></strong>. This is very important as if the account could be reset <em>before</em> verifying identity and then the door is opened for all sorts of malicious activity.<br>
<br>
Here’s an example: someone is bidding at an auction site and towards the end of the bidding process they lock out competing bidders by initiating the reset process thus removing their competition. Clearly there can be major adverse results if a poorly designed reset feature can be abused. Mind you, account lockouts by invalid login attempts is a similar story, but that’s one for another post.<br>
<br>
As I mentioned earlier, allowing anonymous users the ability to reset anyone’s account simply by knowing their email address is a denial of service attack just waiting to happen. It may not be a <a href="http://en.wikipedia.org/wiki/Denial-of-service_attack">DOS</a> in the way we often think of it, but there’s no faster way to lock someone out of their account than though a poorly designed password reset feature.<br>
<br>
<h4>
The weakest link</h4>
All of what you’ve read above is fantastic in terms of securing a single account, but one thing you need to remain conscious of is the ecosystem around the account you’re securing. Let me give you an example:<br>
<br>
ASafaWeb is hosted on the very excellent service provided by AppHarbor. The reset process for their hosting account goes like this:<br>
<br>
<strong>Step 1:</strong><br>
<br>
<div align="center">
<img alt="The AppHarbor sign in page" border="0" height="249" src="./Everything you ever wanted to know about building a secure password reset feature_files/image2.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="528"></div>
<strong><br>
</strong> <strong>Step 2:</strong><br>
<br>
<div align="center">
<img alt="Begining a password reset on AppHarbor" border="0" height="219" src="./Everything you ever wanted to know about building a secure password reset feature_files/image5.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="532"></div>
<strong><br>
</strong> <strong>Step 3:</strong><br>
<br>
<div align="center">
<img alt="AppHarbor confirmation of a new password having been sent" border="0" height="89" src="./Everything you ever wanted to know about building a secure password reset feature_files/image23.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"></div>
<strong><br>
</strong> <strong>Step 4:</strong><br>
<br>
<img alt="AppHarbor email with a new password" border="0" height="312" src="./Everything you ever wanted to know about building a secure password reset feature_files/image17.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="620"><br>
<br>
After reading all the earlier info in this post it’s easy to see there a few areas which, in a perfect world, we’d approach a bit differently. The point I want to make here though is that if I publish a site such as ASafaWeb onto the AppHarbor service then implement some great secret questions and answers, throw in a second factor of authentication and do everything else by the book, none of this will change the fact that the weakest link in the process can trump all of this. After all, if someone can successfully authenticate to AppHarbor using my credentials then they can go and reset every single ASafaWeb account to whatever password they like anyway!<br>
<br>
The point is that the strength of the security implementation needs to be looked at holistically; you need to threat model each and every entry point in the system, even if it’s just a cursory process such as what I did above with AppHarbor. This is enough to give me a good indication of how much effort I should be investing in the ASafaWeb password reset process.<br>
<br>
<h4>
Tying it all together</h4>
This post contains a lot of information to absorb so let me distil it down to a simple visual representation:<br>
<br>
<div align="center">
<img alt="Password reset workflow" border="0" height="665" src="./Everything you ever wanted to know about building a secure password reset feature_files/Password-Reset5.png" style="background-image: none; border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline; padding-left: 0px; padding-right: 0px; padding-top: 0px;" title="" width="589"></div>
<div align="left">
<br>
Keep in mind also that you want to be logging the activity at as many of these points as possible. And that’s it – easy!</div>
<h4>
Summary</h4>
If this seems like a comprehensive post, consider that there’s plenty of additional material I <em>could</em> have included but elected not to for the sake of brevity; the role of a rescue email address, what happens if you lose access to the email on the account (i.e. you change jobs) and so on and so forth. As I said earlier, it’s not that resets are difficult, it’s just there are a lot of angles to it.<br>
<br>
Even though resets aren’t difficult, they’re often implemented poorly. We saw a couple of examples above where the implementation <em>could</em> lead to problems and there are many more precedents where resets gone wrong <em>did</em> cause problems. Just the other day it seems that <a href="http://arstechnica.com/uncategorized/2012/05/bitcoins-worth-87000-plundered/">a reset was abused to steal $87k worth of Bitcoins</a>. That’s a serious adverse result!<br>
<br>
So take care with your resets, <a href="http://en.wikipedia.org/wiki/Threat_model">threat model</a> the various touch points and keep your black hat on while building the feature because if you don’t, there’s a good chance that someone else will!
</div>
<div class="clearFix">
<p class="postFooter">
<iframe id="twitter-widget-0" scrolling="no" frameborder="0" allowtransparency="true" src="./Everything you ever wanted to know about building a secure password reset feature_files/follow_button.1387492107.htm" class="twitter-follow-button twitter-follow-button" title="Twitter Follow Button" data-twttr-rendered="true" style="width: 121px; height: 20px;"></iframe><br>
                      Posted at 08:26, Tuesday, May 22, 2012
</p>
<p class="tags">
                      Tags:
                      
<a href="http://www.troyhunt.com/search/label/Passwords" rel="tag">
Passwords
</a>
<a href="http://www.troyhunt.com/search/label/Security" rel="tag">
Security
</a>
</p>
</div>
<div data-format="728x90" data-publisher="lqm.troyhunt.site" data-type="ad" data-zone="ron" id="ad3"><iframe id="dmad1" allowtransparency="false" style="z-index:10" width="728" height="90" marginwidth="0" marginheight="0" frameborder="0" scrolling="no"></iframe></div>
<div id="disqus_thread"><iframe id="dsq-1" data-disqus-uid="1" allowtransparency="true" frameborder="0" role="complementary" width="100%" src="./Everything you ever wanted to know about building a secure password reset feature_files/saved_resource.htm" style="width: 100% !important; border: none !important; overflow: hidden !important; height: 8219px !important;" scrolling="no" horizontalscrolling="no" verticalscrolling="no"></iframe></div>

<p>Leaving comments is <em>awesome</em>, please do. All I ask is that you be nice and if in doubt, read <a href="http://www.troyhunt.com/p/comments.html">Comments on troyhunt.com</a> for guidance.</p>

</div>

        </div></div>
      
<!-- google_ad_section_end -->
</div>
<div class="blog-pager" id="blog-pager">
<span id="blog-pager-newer-link">
<a class="blog-pager-newer-link" href="http://www.troyhunt.com/2012/06/how-logmein-is-enabling-scammers-to.html" id="Blog1_blog-pager-newer-link" title="Newer Post">Newer Post</a>
</span>
<span id="blog-pager-older-link">
<a class="blog-pager-older-link" href="http://www.troyhunt.com/2012/05/talking-cloud-not-all-net-roads-lead-to.html" id="Blog1_blog-pager-older-link" title="Older Post">Older Post</a>
</span>
<a class="home-link" href="http://www.troyhunt.com/">Home</a>
</div>
<div class="clear"></div>
<div class="post-feeds">
</div>
<script type="text/javascript">window.___gcfg = {'lang': 'en'};</script>
</div><div class="widget HTML" id="HTML1">
</div></div>
<script type="text/javascript">
          var commentsElements = document.getElementsByClassName('comments');
          if (commentsElements.length > 0) {
            commentsElements[0].parentNode.removeChild(commentsElements[0]);
          }
        </script>
<div id="bodySideBarWrapper">
<div class="sideBar" id="sidebar-right-1">
<div class="panel" id="about">
<h3>About</h3>
<p>Software architect and Microsoft MVP, you'll usually find me writing about security concepts and process improvement in software delivery.</p>
</div>
<div class="doubleBox clearFix panel">
<div id="photo">
<img alt="Troy Hunt Photo" src="./Everything you ever wanted to know about building a secure password reset feature_files/Photo.jpg">
</div>
<div id="mvp">
<a href="http://mvp.microsoft.com/en-us/mvp/Troy%20Hunt-4031649" class="imageLink">
<img alt="MVP" src="./Everything you ever wanted to know about building a secure password reset feature_files/MVP.svg">
</a>
</div>
</div>
<div class="panel clearFix" id="pluralsight">
<a href="http://pluralsight.com/training/Courses/TableOfContents/owasp-top10-aspdotnet-application-security-risks" class="imageLink">
<img alt="Learn the Top 10 Web Application Security Risks with Pluralsight" src="./Everything you ever wanted to know about building a secure password reset feature_files/Pluralsight.png">
</a>
</div>
<div class="panel" data-format="300x250" data-publisher="lqm.troyhunt.site" data-type="ad" data-zone="ron" id="ad1"><iframe id="dmad2" allowtransparency="false" style="z-index:10" width="300" height="250" marginwidth="0" marginheight="0" frameborder="0" scrolling="no"></iframe></div>
<div class="panel clearFix" id="asafaweb">
<a href="https://asafaweb.com/" class="imageLink">
<img alt="ASafaWeb" src="./Everything you ever wanted to know about building a secure password reset feature_files/ASafaWeb.png">
</a>
</div>
<div class="panel section" id="tags"><div class="widget Label" id="Label1">
<h3>
Tags
</h3>
<div class="widget-content cloud-label-widget-content">
<span class="label-size label-size-4">
<a dir="ltr" href="http://www.troyhunt.com/search/label/.NET">
.NET
</a>
<span class="label-count" dir="ltr">
                                (57)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/1Password">
1Password
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/5%20Minute%20Wonder">
5 Minute Wonder
</a>
<span class="label-count" dir="ltr">
                                (3)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/AppHarbor">
AppHarbor
</a>
<span class="label-count" dir="ltr">
                                (4)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Apple">
Apple
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-4">
<a dir="ltr" href="http://www.troyhunt.com/search/label/ASafaWeb">
ASafaWeb
</a>
<span class="label-count" dir="ltr">
                                (23)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Azure">
Azure
</a>
<span class="label-count" dir="ltr">
                                (6)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Backup">
Backup
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Bing">
Bing
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Blogger">
Blogger
</a>
<span class="label-count" dir="ltr">
                                (3)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Career%20Development">
Career Development
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/China">
China
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Cloud">
Cloud
</a>
<span class="label-count" dir="ltr">
                                (4)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Code%20Quality">
Code Quality
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Conference">
Conference
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-3">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Continuous%20Integration">
Continuous Integration
</a>
<span class="label-count" dir="ltr">
                                (12)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Corporate">
Corporate
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Database">
Database
</a>
<span class="label-count" dir="ltr">
                                (5)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Design%20Utopia">
Design Utopia
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/DotNetNuke">
DotNetNuke
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/elmah">
elmah
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Enterprise%20Software%20Platform">
Enterprise Software Platform
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Entity%20Framework">
Entity Framework
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Facebook">
Facebook
</a>
<span class="label-count" dir="ltr">
                                (6)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/FxCop">
FxCop
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Gootkit">
Gootkit
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Have%20I%20been%20pwned%3F">
Have I been pwned?
</a>
<span class="label-count" dir="ltr">
                                (6)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/IIS">
IIS
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Internet%20Explorer">
Internet Explorer
</a>
<span class="label-count" dir="ltr">
                                (4)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/iPhone">
iPhone
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/K2">
K2
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/LinkedIn">
LinkedIn
</a>
<span class="label-count" dir="ltr">
                                (3)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Media">
Media
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Mobile">
Mobile
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Mozy">
Mozy
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/MSBuild">
MSBuild
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/MVC">
MVC
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/MVP">
MVP
</a>
<span class="label-count" dir="ltr">
                                (5)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/NDepend">
NDepend
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Netsparker">
Netsparker
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Online%20Identity">
Online Identity
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-3">
<a dir="ltr" href="http://www.troyhunt.com/search/label/OWASP">
OWASP
</a>
<span class="label-count" dir="ltr">
                                (12)
                              </span>
</span>
<span class="label-size label-size-3">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Passwords">
Passwords
</a>
<span class="label-count" dir="ltr">
                                (17)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/People%20Management">
People Management
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Performance">
Performance
</a>
<span class="label-count" dir="ltr">
                                (3)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Personal%20Development">
Personal Development
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Pluralsight">
Pluralsight
</a>
<span class="label-count" dir="ltr">
                                (5)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Product%20Review">
Product Review
</a>
<span class="label-count" dir="ltr">
                                (4)
                              </span>
</span>
<span class="label-size label-size-3">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Red%20Gate">
Red Gate
</a>
<span class="label-count" dir="ltr">
                                (11)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/ReSharper">
ReSharper
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-3">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Scam">
Scam
</a>
<span class="label-count" dir="ltr">
                                (16)
                              </span>
</span>
<span class="label-size label-size-5">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Security">
Security
</a>
<span class="label-count" dir="ltr">
                                (138)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/SharePoint">
SharePoint
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Silverlight">
Silverlight
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Software%20Quality">
Software Quality
</a>
<span class="label-count" dir="ltr">
                                (4)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Source%20Control%20Management">
Source Control Management
</a>
<span class="label-count" dir="ltr">
                                (3)
                              </span>
</span>
<span class="label-size label-size-4">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Speaking">
Speaking
</a>
<span class="label-count" dir="ltr">
                                (22)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/SQL%20Compare">
SQL Compare
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/SQL%20Data%20Compare">
SQL Data Compare
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/SQL%20Data%20Generator">
SQL Data Generator
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/SQL%20Injection">
SQL Injection
</a>
<span class="label-count" dir="ltr">
                                (4)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/SQL%20Prompt">
SQL Prompt
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/SQL%20Search">
SQL Search
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/SQL%20Server">
SQL Server
</a>
<span class="label-count" dir="ltr">
                                (4)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/SQL%20Source%20Control">
SQL Source Control
</a>
<span class="label-count" dir="ltr">
                                (6)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/SQL%20Test">
SQL Test
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-3">
<a dir="ltr" href="http://www.troyhunt.com/search/label/SSL">
SSL
</a>
<span class="label-count" dir="ltr">
                                (13)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Standards">
Standards
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/StatSVN">
StatSVN
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/StillAlive">
StillAlive
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-3">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Subversion">
Subversion
</a>
<span class="label-count" dir="ltr">
                                (13)
                              </span>
</span>
<span class="label-size label-size-3">
<a dir="ltr" href="http://www.troyhunt.com/search/label/TeamCity">
TeamCity
</a>
<span class="label-count" dir="ltr">
                                (12)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Travel">
Travel
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Twitter">
Twitter
</a>
<span class="label-count" dir="ltr">
                                (3)
                              </span>
</span>
<span class="label-size label-size-3">
<a dir="ltr" href="http://www.troyhunt.com/search/label/UX">
UX
</a>
<span class="label-count" dir="ltr">
                                (7)
                              </span>
</span>
<span class="label-size label-size-3">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Visual%20Studio">
Visual Studio
</a>
<span class="label-count" dir="ltr">
                                (7)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/WCSA">
WCSA
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Web%20Deploy">
Web Deploy
</a>
<span class="label-count" dir="ltr">
                                (5)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Windows">
Windows
</a>
<span class="label-count" dir="ltr">
                                (4)
                              </span>
</span>
<span class="label-size label-size-1">
<a dir="ltr" href="http://www.troyhunt.com/search/label/Windows%20Mobile">
Windows Mobile
</a>
<span class="label-count" dir="ltr">
                                (1)
                              </span>
</span>
<span class="label-size label-size-2">
<a dir="ltr" href="http://www.troyhunt.com/search/label/XSS">
XSS
</a>
<span class="label-count" dir="ltr">
                                (2)
                              </span>
</span>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit imageLink" href="http://www.blogger.com/rearrange?blogID=3977663544337573923&widgetType=Label&widgetId=Label1&action=editWidget&sectionId=tags" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;Label1&quot;));" target="configLabel1" title="Edit">
<img alt="" height="18" src="./Everything you ever wanted to know about building a secure password reset feature_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div></div>
<div class="panel clearFix" id="ebook">
<a href="http://www.troyhunt.com/2011/12/free-ebook-owasp-top-10-for-net.html" class="imageLink">
<img alt="OWASP Top 10 for .NET developers" src="./Everything you ever wanted to know about building a secure password reset feature_files/Ebook.png">
</a>
</div>
</div>
<div class="sideBar" id="sidebar-right-2">
<div class="panel section" id="topPosts"><div class="widget PopularPosts" id="PopularPosts1">
<h3>
Top posts
</h3>
<ol>
<li>
<a href="http://www.troyhunt.com/2013/01/the-impending-crisis-that-is-windows-xp.html">
The impending crisis that is Windows XP and IE 8
</a>
</li>
<li>
<a href="http://www.troyhunt.com/2011/03/only-secure-password-is-one-you-cant.html">
The only secure password is the one you can’t remember
</a>
</li>
<li>
<a href="http://www.troyhunt.com/2013/12/micro-optimising-web-content-for.html">
Micro optimising web content for unexpected, wild success
</a>
</li>
<li>
<a href="http://www.troyhunt.com/2014/01/scammer-identifies-viruses-in-brand-new.html">
Scammer identifies “viruses” in a brand new Windows Azure VM then asks to be bought porn
</a>
</li>
<li>
<a href="http://www.troyhunt.com/2013/12/have-you-been-pwned-now-you-can-be.html">
Have you been pwned? Now you can be automatically told when you are!
</a>
</li>
</ol>
</div></div>
<div class="panel" data-format="160x600" data-publisher="lqm.troyhunt.site" data-type="ad" data-zone="ron" id="ad2"><iframe id="dmad3" allowtransparency="false" style="z-index:10" width="160" height="600" marginwidth="0" marginheight="0" frameborder="0" scrolling="no"></iframe></div>
<div class="panel section" id="archive"><div class="widget BlogArchive" id="BlogArchive1">
<h3>
Blog Archive
</h3>
<div class="widget-content">
<div id="ArchiveList">
<div id="BlogArchive1_ArchiveList">
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/search?updated-min=2014-01-01T00:00:00%2B11:00&updated-max=2015-01-01T00:00:00%2B11:00&max-results=4">
2014
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2014_01_01_archive.html">
January
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/search?updated-min=2013-01-01T00:00:00%2B11:00&updated-max=2014-01-01T00:00:00%2B11:00&max-results=50">
2013
</a>
<span class="post-count" dir="ltr">
                            (78)
                          </span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_12_01_archive.html">
December
</a>
<span class="post-count" dir="ltr">
                            (9)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_11_01_archive.html">
November
</a>
<span class="post-count" dir="ltr">
                            (6)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_10_01_archive.html">
October
</a>
<span class="post-count" dir="ltr">
                            (7)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_09_01_archive.html">
September
</a>
<span class="post-count" dir="ltr">
                            (8)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_08_01_archive.html">
August
</a>
<span class="post-count" dir="ltr">
                            (2)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_07_01_archive.html">
July
</a>
<span class="post-count" dir="ltr">
                            (7)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_06_01_archive.html">
June
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_05_01_archive.html">
May
</a>
<span class="post-count" dir="ltr">
                            (11)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_04_01_archive.html">
April
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_03_01_archive.html">
March
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_02_01_archive.html">
February
</a>
<span class="post-count" dir="ltr">
                            (6)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2013_01_01_archive.html">
January
</a>
<span class="post-count" dir="ltr">
                            (10)
                          </span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate expanded">
<a class="toggle" href="javascript:void(0)">
<span class="zippy toggle-open">▼&nbsp;</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/search?updated-min=2012-01-01T00:00:00%2B11:00&updated-max=2013-01-01T00:00:00%2B11:00&max-results=50">
2012
</a>
<span class="post-count" dir="ltr">
                            (59)
                          </span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_12_01_archive.html">
December
</a>
<span class="post-count" dir="ltr">
                            (3)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_11_01_archive.html">
November
</a>
<span class="post-count" dir="ltr">
                            (5)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_10_01_archive.html">
October
</a>
<span class="post-count" dir="ltr">
                            (5)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_09_01_archive.html">
September
</a>
<span class="post-count" dir="ltr">
                            (3)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_08_01_archive.html">
August
</a>
<span class="post-count" dir="ltr">
                            (6)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_07_01_archive.html">
July
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_06_01_archive.html">
June
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate expanded">
<a class="toggle" href="javascript:void(0)">
<span class="zippy toggle-open">▼&nbsp;</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_05_01_archive.html">
May
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
<ul class="posts">
<li>
<a href="./Everything you ever wanted to know about building a secure password reset feature_files/Everything you ever wanted to know about building a secure password reset feature.htm">
Everything you ever wanted to know about building ...
</a>
</li>
<li>
<a href="http://www.troyhunt.com/2012/05/talking-cloud-not-all-net-roads-lead-to.html">
Talking cloud: Not all .NET roads lead to Microsof...
</a>
</li>
<li>
<a href="http://www.troyhunt.com/2012/05/speaking-about-aspnet-security-on-owasp.html">
Speaking about ASP.NET security on the OWASP podca...
</a>
</li>
<li>
<a href="http://www.troyhunt.com/2012/05/interview-with-man-behind-comantra-cold.html">
Interview with the man behind Comantra, the “cold ...
</a>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_04_01_archive.html">
April
</a>
<span class="post-count" dir="ltr">
                            (9)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_03_01_archive.html">
March
</a>
<span class="post-count" dir="ltr">
                            (6)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_02_01_archive.html">
February
</a>
<span class="post-count" dir="ltr">
                            (6)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2012_01_01_archive.html">
January
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/search?updated-min=2011-01-01T00:00:00%2B11:00&updated-max=2012-01-01T00:00:00%2B11:00&max-results=50">
2011
</a>
<span class="post-count" dir="ltr">
                            (50)
                          </span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_12_01_archive.html">
December
</a>
<span class="post-count" dir="ltr">
                            (6)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_11_01_archive.html">
November
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_10_01_archive.html">
October
</a>
<span class="post-count" dir="ltr">
                            (6)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_09_01_archive.html">
September
</a>
<span class="post-count" dir="ltr">
                            (7)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_08_01_archive.html">
August
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_07_01_archive.html">
July
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_06_01_archive.html">
June
</a>
<span class="post-count" dir="ltr">
                            (2)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_05_01_archive.html">
May
</a>
<span class="post-count" dir="ltr">
                            (3)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_04_01_archive.html">
April
</a>
<span class="post-count" dir="ltr">
                            (3)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_03_01_archive.html">
March
</a>
<span class="post-count" dir="ltr">
                            (5)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_02_01_archive.html">
February
</a>
<span class="post-count" dir="ltr">
                            (2)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2011_01_01_archive.html">
January
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/search?updated-min=2010-01-01T00:00:00%2B11:00&updated-max=2011-01-01T00:00:00%2B11:00&max-results=40">
2010
</a>
<span class="post-count" dir="ltr">
                            (40)
                          </span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_12_01_archive.html">
December
</a>
<span class="post-count" dir="ltr">
                            (6)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_11_01_archive.html">
November
</a>
<span class="post-count" dir="ltr">
                            (7)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_10_01_archive.html">
October
</a>
<span class="post-count" dir="ltr">
                            (1)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_09_01_archive.html">
September
</a>
<span class="post-count" dir="ltr">
                            (5)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_08_01_archive.html">
August
</a>
<span class="post-count" dir="ltr">
                            (2)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_07_01_archive.html">
July
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_06_01_archive.html">
June
</a>
<span class="post-count" dir="ltr">
                            (1)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_05_01_archive.html">
May
</a>
<span class="post-count" dir="ltr">
                            (2)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_04_01_archive.html">
April
</a>
<span class="post-count" dir="ltr">
                            (2)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_03_01_archive.html">
March
</a>
<span class="post-count" dir="ltr">
                            (3)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_02_01_archive.html">
February
</a>
<span class="post-count" dir="ltr">
                            (3)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2010_01_01_archive.html">
January
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/search?updated-min=2009-01-01T00:00:00%2B11:00&updated-max=2010-01-01T00:00:00%2B11:00&max-results=10">
2009
</a>
<span class="post-count" dir="ltr">
                            (10)
                          </span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2009_12_01_archive.html">
December
</a>
<span class="post-count" dir="ltr">
                            (4)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2009_11_01_archive.html">
November
</a>
<span class="post-count" dir="ltr">
                            (3)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2009_10_01_archive.html">
October
</a>
<span class="post-count" dir="ltr">
                            (2)
                          </span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

                              ►&nbsp;
                            
</span>
</a>
<a class="post-count-link" href="http://www.troyhunt.com/2009_09_01_archive.html">
September
</a>
<span class="post-count" dir="ltr">
                            (1)
                          </span>
</li>
</ul>
</li>
</ul>
</div>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit imageLink" href="http://www.blogger.com/rearrange?blogID=3977663544337573923&widgetType=BlogArchive&widgetId=BlogArchive1&action=editWidget&sectionId=archive" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;BlogArchive1&quot;));" target="configBlogArchive1" title="Edit">
<img alt="" height="18" src="./Everything you ever wanted to know about building a secure password reset feature_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div></div>
<div class="panel clearFix" id="dzone">
<a href="http://www.dzone.com/user/843891" class="imageLink">
<img alt="DZone most valuable blogger" src="./Everything you ever wanted to know about building a secure password reset feature_files/DZone.png">
</a>
</div>
<div class="panel" id="redgate">
<a href="http://www.red-gate.com/our-company/about/community-relations/friends-of-rg" class="imageLink">
<img alt="Friend of Red Gate" src="./Everything you ever wanted to know about building a secure password reset feature_files/RedGate2013.png">
</a>
</div>
<div class="panel" id="aspinsider">
<a href="http://aspinsiders.com/" class="imageLink">
<img alt="ASPInsider" src="./Everything you ever wanted to know about building a secure password reset feature_files/ASPInsider.png">
</a>
</div>
</div>
</div>
</div>
</div>
<footer>
<div class="clearFix">
<div id="designedByMeContainer">
<div id="disclaimerContainer">
<div id="copyrightContainer">
<aside id="copyright">
<div>
<h2>Copyright 2014, Troy Hunt</h2>
<p>
<a href="http://creativecommons.org/licenses/by/3.0/" rel="license" class="imageLink">
<img alt="Creative Commons License" src="./Everything you ever wanted to know about building a secure password reset feature_files/80x15.png" style="border-width: 0">
</a>
<br>
                    This work is licensed under a <a href="http://creativecommons.org/licenses/by/3.0/" rel="license">Creative Commons Attribution 3.0 Unported License</a>. In other words, share generously but provide attribution.
                  </p>
</div>
</aside>
<aside id="disclaimer">
<div>
<h2>Disclaimer</h2>
<p>Opinions expressed here are my own and may not reflect those of my employer, my colleagues, my mates, my wife, the dog and so on and so forth. Unless I'm quoting someone, they're my own opinions and may not necessarily be cohesive nor entertaining but hey, at least they're original.</p>
</div>
</aside>
<aside id="designedByMe">
<div>
<h2>Designed by me</h2>
<p>All original because I'm fussy and you just never quite get exactly what you want from a Blogger template. Besides, the left side of my brain rarely gets out these days and it needed the exercise.</p>
</div>
</aside>
</div>
</div>
</div>
</div>
</footer>
</div>
<script src="./Everything you ever wanted to know about building a secure password reset feature_files/jquery.min.js" type="text/javascript"></script>
<script src="./Everything you ever wanted to know about building a secure password reset feature_files/Script"></script>
<script src="./Everything you ever wanted to know about building a secure password reset feature_files/addthis_widget.js" type="text/javascript"></script><div id="_atssh" style="visibility: hidden; height: 1px; width: 1px; position: absolute; z-index: 100000;"><iframe id="_atssh412" title="AddThis utility frame" style="height: 1px; width: 1px; position: absolute; z-index: 100000; border: 0px; left: 0px; top: 0px;" src="./Everything you ever wanted to know about building a secure password reset feature_files/sh142.htm"></iframe></div><script type="text/javascript" src="./Everything you ever wanted to know about building a secure password reset feature_files/core115.js"></script>
<script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('widgetJsBefore');
</script><script type="text/javascript" src="./Everything you ever wanted to know about building a secure password reset feature_files/3561504294-widgets.js"></script>
<script type="text/javascript" src="./Everything you ever wanted to know about building a secure password reset feature_files/plusone.js" gapi_processed="true"></script>
<script type="text/javascript">
if (typeof(BLOG_attachCsiOnload) != 'undefined' && BLOG_attachCsiOnload != null) { window['blogger_templates_experiment_id'] = "templatesV2";window['blogger_blog_id'] = '3977663544337573923';BLOG_attachCsiOnload('item_'); }_WidgetManager._Init('//www.blogger.com/rearrange?blogID\x3d3977663544337573923','//www.troyhunt.com/2012/05/everything-you-ever-wanted-to-know.html','3977663544337573923');
_WidgetManager._SetDataContext([{'name': 'blog', 'data': {'blogId': '3977663544337573923', 'bloggerUrl': 'http://www.blogger.com', 'title': 'Troy Hunt', 'pageType': 'item', 'url': 'http://www.troyhunt.com/2012/05/everything-you-ever-wanted-to-know.html', 'canonicalUrl': 'http://www.troyhunt.com/2012/05/everything-you-ever-wanted-to-know.html', 'canonicalHomepageUrl': 'http://www.troyhunt.com/', 'homepageUrl': 'http://www.troyhunt.com/', 'blogspotFaviconUrl': 'http://www.troyhunt.com/favicon.ico', 'enabledCommentProfileImages': true, 'adultContent': false, 'disableAdSenseWidget': false, 'analyticsAccountNumber': '', 'searchLabel': '', 'searchQuery': '', 'pageName': 'Everything you ever wanted to know about building a secure password reset feature', 'pageTitle': 'Troy Hunt: Everything you ever wanted to know about building a secure password reset feature', 'encoding': 'UTF-8', 'locale': 'en', 'localeUnderscoreDelimited': 'en', 'isPrivate': false, 'isMobile': false, 'isMobileRequest': false, 'mobileClass': '', 'isPrivateBlog': false, 'languageDirection': 'ltr', 'feedLinks': '\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Troy Hunt - Atom\42 href\75\42http://www.troyhunt.com/feeds/posts/default\42 /\76\n\74link rel\75\42alternate\42 type\75\42application/rss+xml\42 title\75\42Troy Hunt - RSS\42 href\75\42http://www.troyhunt.com/feeds/posts/default?alt\75rss\42 /\76\n\74link rel\75\42service.post\42 type\75\42application/atom+xml\42 title\75\42Troy Hunt - Atom\42 href\75\42http://www.blogger.com/feeds/3977663544337573923/posts/default\42 /\76\n\n\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Troy Hunt - Atom\42 href\75\42http://www.troyhunt.com/feeds/2090131566500196324/comments/default\42 /\76\n', 'meTag': '', 'openIdOpTag': '', 'googleProfileUrl': 'https://plus.google.com/111846329802076778489', 'postImageThumbnailUrl': 'https://lh6.googleusercontent.com/-9Va6Qa-dV-0/UIZ_gj11DrI/AAAAAAAAEGg/WGQ9aiuxjfA/s72-c/SNAGHTML3181e493_2.png?imgmax\75800', 'imageSrcTag': '\74link rel\75\42image_src\42 href\75\42https://lh6.googleusercontent.com/-9Va6Qa-dV-0/UIZ_gj11DrI/AAAAAAAAEGg/WGQ9aiuxjfA/s72-c/SNAGHTML3181e493_2.png?imgmax\75800\42 /\76\n', 'latencyHeadScript': '\74script type\75\42text/javascript\42\76(function() { var b\75window,f\75\42chrome\42,g\75\42jstiming\42,k\75\42tick\42;(function(){function d(a){this.t\75{};this.tick\75function(a,d,c){var e\75void 0!\75c?c:(new Date).getTime();this.t[a]\75[e,d];if(void 0\75\75c)try{b.console.timeStamp(\42CSI/\42+a)}catch(h){}};this[k](\42start\42,null,a)}var a;b.performance\46\46(a\75b.performance.timing);var n\75a?new d(a.responseStart):new d;b.jstiming\75{Timer:d,load:n};if(a){var c\75a.navigationStart,h\75a.responseStart;0\74c\46\46h\76\75c\46\46(b[g].srt\75h-c)}if(a){var e\75b[g].load;0\74c\46\46h\76\75c\46\46(e[k](\42_wtsrt\42,void 0,c),e[k](\42wtsrt_\42,\42_wtsrt\42,h),e[k](\42tbsd_\42,\42wtsrt_\42))}try{a\75null,\nb[f]\46\46b[f].csi\46\46(a\75Math.floor(b[f].csi().pageT),e\46\0460\74c\46\46(e[k](\42_tbnd\42,void 0,b[f].csi().startE),e[k](\42tbnd_\42,\42_tbnd\42,c))),null\75\75a\46\46b.gtbExternal\46\46(a\75b.gtbExternal.pageT()),null\75\75a\46\46b.external\46\46(a\75b.external.pageT,e\46\0460\74c\46\46(e[k](\42_tbnd\42,void 0,b.external.startE),e[k](\42tbnd_\42,\42_tbnd\42,c))),a\46\46(b[g].pt\75a)}catch(p){}})();b.tickAboveFold\75function(d){var a\0750;if(d.offsetParent){do a+\75d.offsetTop;while(d\75d.offsetParent)}d\75a;750\76\75d\46\46b[g].load[k](\42aft\42)};var l\75!1;function m(){l||(l\75!0,b[g].load[k](\42firstScrollTime\42))}b.addEventListener?b.addEventListener(\42scroll\42,m,!1):b.attachEvent(\42onscroll\42,m);\n })();\74/script\076', 'mobileHeadScript': '', 'ieCssRetrofitLinks': '\74!--[if IE]\76\74script type\75\42text/javascript\42 src\75\42https://www.blogger.com/static/v1/jsbin/850967532-ieretrofit.js\42\76\74/script\76\n\74![endif]--\076', 'view': '', 'dynamicViewsCommentsSrc': '//www.blogblog.com/dynamicviews/4224c15c4e7c9321/js/comments.js', 'dynamicViewsScriptSrc': '//www.blogblog.com/dynamicviews/d6f37bb30c327165', 'plusOneApiSrc': 'https://apis.google.com/js/plusone.js', 'testHtml5CssSrc': 'https://www.blogger.com/static/v1/widgets/2412321170-css_bundle_html5.css', 'sf': 'n', 'tf': ''}}, {'name': 'skin', 'data': {'vars': {}, 'override': ''}}, {'name': 'view', 'data': {'classic': {'name': 'classic', 'url': '/?view\75classic'}, 'flipcard': {'name': 'flipcard', 'url': '/?view\75flipcard'}, 'magazine': {'name': 'magazine', 'url': '/?view\75magazine'}, 'mosaic': {'name': 'mosaic', 'url': '/?view\75mosaic'}, 'sidebar': {'name': 'sidebar', 'url': '/?view\75sidebar'}, 'snapshot': {'name': 'snapshot', 'url': '/?view\75snapshot'}, 'timeslide': {'name': 'timeslide', 'url': '/?view\75timeslide'}}}]);
_WidgetManager._RegisterWidget('_LabelView', new _WidgetInfo('Label1', 'tags', null, document.getElementById('Label1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_PopularPostsView', new _WidgetInfo('PopularPosts1', 'topPosts', null, document.getElementById('PopularPosts1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogArchiveView', new _WidgetInfo('BlogArchive1', 'archive', null, document.getElementById('BlogArchive1'), {'languageDirection': 'ltr'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HeaderView', new _WidgetInfo('Header1', 'header', null, document.getElementById('Header1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogView', new _WidgetInfo('Blog1', 'main', null, document.getElementById('Blog1'), {'cmtInteractionsEnabled': false, 'lightboxEnabled': true, 'lightboxModuleUrl': 'https://www.blogger.com/static/v1/jsbin/3672639782-lbx.js', 'lightboxCssUrl': 'https://www.blogger.com/static/v1/v-css/4138445517-lightbox_bundle.css'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML1', 'main', null, document.getElementById('HTML1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_PageListView', new _WidgetInfo('PageList1', 'null', null, document.getElementById('PageList1'), {'title': 'Pages', 'links': [{'href': 'http://www.troyhunt.com/', 'title': 'Home', 'isCurrentPage': false}, {'href': 'http://www.troyhunt.com/p/media.html', 'title': 'Media', 'isCurrentPage': false}, {'href': 'http://www.troyhunt.com/p/reproduced-work.html', 'title': 'Reproduced Work', 'isCurrentPage': false}, {'href': 'http://www.troyhunt.com/p/design-assets.html', 'title': 'Design Assets', 'isCurrentPage': false}, {'href': 'http://www.troyhunt.com/p/comments.html', 'title': 'Comments on troyhunt.com', 'isCurrentPage': false}, {'href': 'http://www.troyhunt.com/p/2014events.html', 'title': 'Events I\47ll be attending in 2014', 'isCurrentPage': false}], 'mobile': false}, 'displayModeFull'));
</script>

<div id="fb-root" class=" fb_reset"><script src="./Everything you ever wanted to know about building a secure password reset feature_files/all.js" async=""></script><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="fb_xdm_frame_http" frameborder="0" allowtransparency="true" scrolling="no" id="fb_xdm_frame_http" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tab-index="-1" src="./Everything you ever wanted to know about building a secure password reset feature_files/xd_arbiter.htm" style="border: none;"></iframe><iframe name="fb_xdm_frame_https" frameborder="0" allowtransparency="true" scrolling="no" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tab-index="-1" src="./Everything you ever wanted to know about building a secure password reset feature_files/xd_arbiter(1).htm" style="border: none;"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="f4832a404" frameborder="0" allowtransparency="true" scrolling="no" src="./Everything you ever wanted to know about building a secure password reset feature_files/ping.htm" style="display: none;"></iframe></div></div></div><iframe name="oauth2relay497122582" id="oauth2relay497122582" src="./Everything you ever wanted to know about building a secure password reset feature_files/postmessageRelay.htm" style="width: 1px; height: 1px; position: absolute; top: -100px;"></iframe></body></html>
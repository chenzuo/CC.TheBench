@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<CC.TheBench.Frontend.Web.Views.Account.Models.LoginModel>
@using CC.TheBench.Frontend.Web.Validation
@{
    Layout = "Account/Layout.cshtml";
}

@section Title { @Text.Account.Login }

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function() {
            $('#@Html.RenderContext.Context.GetFirstInvalidField("email", new[] {"email", "password"})').focus();

            $('#login-form').validate({
                errorClass: 'has-error',
                messages: {
                    email: '@Html.ValidationMessage((string)Text.Validation.IsRequired, (string)Text.Account.Email)',
                    password: '@Html.ValidationMessage((string)Text.Validation.IsRequired, (string)Text.Account.Password)',
                },
                errorPlacement: $.noop,
                highlight: function(element, errorClass) {
                    $(element).closest('span').addClass(errorClass);
                },
                unhighlight: function(element, errorClass) {
                    $(element).closest('span').removeClass(errorClass);
                },
                invalidHandler: function(event, validator) {
                    var errors = validator.numberOfInvalids();
                    if (errors) {
                        var errorList = '';
                        $.each(validator.errorList, function () {
                            errorList += '<p>' + this.message + '</p>';
                        });

                        $('#errors').html(errorList);
                        $('#errors').show();
                    } else {
                        $('#errors').hide();
                    }
                }
            });
        });
    </script>
}

<div id="login-box" class="login-box visible widget-box no-border">
    <div class="widget-body">
        <div class="widget-main">
            <h4 class="header blue lighter bigger">
                <i class="icon-pencil blue"></i>
                @Text.Account.EnterYourInformation
            </h4>
        
            <div id="errors" class="alert alert-danger" @(Html.RenderContext.Context.ModelValidationResult.IsValid ? "style='display: none;'" : string.Empty)>
                @foreach (var e in Html.RenderContext.Context.ModelValidationResult.Errors)
                {
                    <p>@e.GetMessage(string.Empty)</p>
                }
            </div>
            
            <div class="space-6"></div>
        
            <form id="login-form" action="@Url.Content("~/account/login")@(string.IsNullOrWhiteSpace(Model.ReturnUrl) ? string.Empty : "?returnUrl=" + Model.ReturnUrl)" method="POST">
                @Html.AntiForgeryToken()

                <fieldset>
                    <label class="block clearfix">
                        <span class="block input-icon input-icon-right @(Html.RenderContext.Context.HasError("Email") ? "has-error" : string.Empty)">
                            <input type="text" class="form-control" id="email" name="email" placeholder="@Text.Account.Email" value="@Model.Email" required />
                            <i class="icon-user"></i>
                        </span>
                    </label>

                    <label class="block clearfix">
                        <span class="block input-icon input-icon-right @(Html.RenderContext.Context.HasError("Password") ? "has-error" : string.Empty)">
                            <input type="password" class="form-control" id="password" name="password" placeholder="@Text.Account.Password" required />
                            <i class="icon-lock"></i>
                        </span>
                    </label>

                    <div class="space"></div>

                    <div class="clearfix">
                        <label class="inline">
                            <input type="checkbox" class="ace" id="rememberMe" name="rememberMe" value="true" @(Model.RememberMe ? "checked='checked'" : string.Empty) />
                            <span class="lbl"> @Text.Account.RememberMe</span>
                        </label>

                        <button type="submit" class="width-35 pull-right btn btn-sm btn-primary">
                            <i class="icon-key"></i>
                            @Text.Account.Login
                        </button>
                    </div>

                    <div class="space-4"></div>
                </fieldset>
            </form>

            <div class="social-or-login center">
                <span class="bigger-110">@Text.Account.OrLoginUsing</span>
            </div>

            <div class="social-login center">
                <a class="btn btn-primary">
                    <i class="icon-facebook"></i>
                </a>

                <a class="btn btn-info">
                    <i class="icon-twitter"></i>
                </a>

                <a class="btn btn-danger">
                    <i class="icon-google-plus"></i>
                </a>
            </div>
        </div>

        <div class="toolbar clearfix">
            <div>
                <a href="@Url.Content("~/account/forgotpassword")" class="forgot-password-link">
                    <i class="icon-arrow-left"></i>
                    @Text.Account.IForgotMyPassword
                </a>
            </div>

            <div>
                <a href="@Url.Content("~/account/register")" class="user-signup-link">
                    @Text.Account.IWantToRegister
                    <i class="icon-arrow-right"></i>
                </a>
            </div>
        </div>
    </div>
</div>